version: '3.8'

services:
  # MySQL Databases
  mysql:
    image: mysql:8.0.40-debian
    container_name: mysql
    hostname: mysql
    restart: always
    ports:
      - '3306:3306'
    environment:
      MYSQL_ROOT_PASSWORD: 123456
    volumes:
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    # THÊM: Health check để đảm bảo MySQL đã sẵn sàng trước khi các service khác kết nối
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-P", "3306", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 10s # Kiểm tra mỗi 10 giây
      timeout: 5s   # Thời gian chờ cho mỗi lần kiểm tra
      retries: 5    # Thử lại 5 lần trước khi báo cáo là unhealthy
      start_period: 30s # Cho phép MySQL 30 giây để khởi động ban đầu trước khi bắt đầu kiểm tra

  # MongoDB
  mongodb:
    image: mongo:8.0.1-noble
    container_name: mongodb
    hostname: mongodb
    restart: always
    ports:
      - '27017:27017'
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    # THÊM: Health check cho MongoDB
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand('ping').ok"] # Lệnh kiểm tra sức khỏe MongoDB
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  # Kafka
  kafka:
    image: 'bitnami/kafka:3.8.0'
    container_name: kafka
    hostname: kafka
    restart: always
    ports:
      - '9094:9094'
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    # THÊM: Health check cho Kafka
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions.sh", "--bootstrap-server", "localhost:9092"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Backend Services
  identity-service:
    build: ./identity-service
    container_name: identity-service
    restart: on-failure
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/oms_identity?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=123456
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=com.mysql.cj.jdbc.Driver
      - SPRING_JPA_DATABASE_PLATFORM=org.hibernate.dialect.MySQLDialect
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka:9092
      - APP_SERVICES_PROFILE=http://profile-service:8081/profile
    # THÊM: Đảm bảo mysql và kafka đã healthy trước khi khởi động
    depends_on:
      mysql:
        condition: service_healthy
      kafka:
        condition: service_healthy

  profile-service:
    build: ./profile-service
    container_name: profile-service
    ports:
      - "8081:8081"
    environment:
      # SỬA: Bổ sung các tham số URL giống như identity-service
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/oms_user?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=123456
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=com.mysql.cj.jdbc.Driver
      - SPRING_JPA_DATABASE_PLATFORM=org.hibernate.dialect.MySQLDialect
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    # THÊM: Đảm bảo mysql đã healthy trước khi khởi động
    depends_on:
      mysql:
        condition: service_healthy

  notification-service:
    build: ./notification-service
    container_name: notification-service
    ports:
      - "8082:8082"
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://root:root@mongodb:27017/notification-service?authSource=admin
      - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka:9092
    # THÊM: Đảm bảo mongodb và kafka đã healthy trước khi khởi động
    depends_on:
      mongodb:
        condition: service_healthy
      kafka:
        condition: service_healthy

  post-service:
    build: ./post-service
    container_name: post-service
    ports:
      - "8083:8083"
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://root:root@mongodb:27017/post-service?authSource=admin
      - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka:9092
      - APP_SERVICES_PROFILE_URL=http://profile-service:8081/profile
    # THÊM: Đảm bảo mongodb, kafka và profile-service đã khởi động
    depends_on:
      mongodb:
        condition: service_healthy
      kafka:
        condition: service_healthy
      profile-service:
        condition: service_started # Hoặc service_healthy nếu profile-service có healthcheck

  comment-service:
    build: ./comment-service
    container_name: comment-service
    ports:
      - "8084:8084"
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://root:root@mongodb:27017/comment-service?authSource=admin
      - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka:9092
      - APP_SERVICES_PROFILE_URL=http://profile-service:8081/profile
    # THÊM: Đảm bảo mongodb, kafka và profile-service đã khởi động
    depends_on:
      mongodb:
        condition: service_healthy
      kafka:
        condition: service_healthy
      profile-service:
        condition: service_started

  media-service:
    build: ./media-service
    container_name: media-service
    ports:
      - "8085:8085"
    environment:
      # SỬA: Bổ sung các tham số URL
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/oms_media?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=123456
      - APP_SERVICES_PROFILE_URL=http://profile-service:8081/profile
      - APP_SERVICES_POST_URL=http://post-service:8083/post
      - CLOUDINARY_CLOUD_NAME=drgbufm8f
      - CLOUDINARY_API_KEY=544713746952842
      - CLOUDINARY_API_SECRET=8LojRmYU-h6cRoSITJ5fYj6iY7Y
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    # THÊM: Đảm bảo mysql, profile-service và post-service đã khởi động
    depends_on:
      mysql:
        condition: service_healthy
      profile-service:
        condition: service_started
      post-service:
        condition: service_started

  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    restart: on-failure
    ports:
      - "8888:8888"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      identity-service:
        condition: service_started
      profile-service:
        condition: service_started
      notification-service:
        condition: service_started
      post-service:
        condition: service_started
      comment-service:
        condition: service_started
      media-service:
        condition: service_started


  # Frontend
  web-app:
    build: ./web-app
    container_name: web-app
    ports:
      - "3000:3000"
    # THÊM: Đảm bảo api-gateway đã khởi động
    depends_on:
      api-gateway:
        condition: service_started